{"version":3,"sources":["rating.es6"],"names":[],"mappings":"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","file":"rating.js","sourcesContent":["require([ \"jquery\" ], function ( $ ) {\r\n\r\n\r\n\r\n    jQuery.fn.C3Graph = function ( params ) {\r\n        if ( this.length == 0 ) return this;\r\n        /** support mutltiple elements */\r\n            // if ( this.length > 1 ) {\r\n            // \tthis.each(function () {\r\n            // \t\t$(this).GeoPicker(params);\r\n            // \t});\r\n            // \treturn this;\r\n            // }\r\n\r\n        let el = jQuery(this),\r\n            defaults = {\r\n                data: {},\r\n                wrapper: {\r\n                    style: {\r\n                        width: '100%',\r\n                        height: 300\r\n                    }\r\n                },\r\n                classes: {\r\n                    bar: 'rating-bar',\r\n                    positiveBar: 'rating-bar_inner'\r\n                }\r\n\r\n            },\r\n            settings = jQuery.extend({}, defaults, params);\r\n        const init = function () {\r\n            let max = Math.max.apply(Math, Object.keys(settings.data).map(( key ) => settings.data[ key ].value));\r\n            setup();\r\n        };\r\n\r\n        const setup = function () {\r\n            el.css(settings.wrapper.style);\r\n            let mostCount = Math.max.apply(Math, Object.values(settings.data).map(( i ) => i.count));\r\n\r\n            Object.keys(settings.data).map(( key ) => {\r\n                let totalBlock = document.createElement('DIV'),\r\n                    positiveBlock = document.createElement('DIV'),\r\n                    heightTotal = 100 * settings.data[ key ].count,\r\n                    heightPositive = settings.data[ key ].value / (heightTotal / 100);\r\n\r\n                totalBlock.classList.add(settings.classes.bar);\r\n                positiveBlock.classList.add(settings.classes.positiveBar);\r\n\r\n                totalBlock.style.width = '45px';\r\n                totalBlock.style.height = _getHeight(mostCount, settings.data[ key ].count) + 'px';\r\n                // totalBlock.style.background = 'red';\r\n\r\n                // totalBlock.dataset.value = (Math.ceil(heightPositive * 10) / 10) + '%';\r\n                totalBlock.dataset.count = settings.data[ key ].count;\r\n\r\n                let date = '', line = '', fahrtId = '';\r\n                [ date, line, fahrtId ] = key.split('_');\r\n                totalBlock.dataset.date = date;\r\n                totalBlock.dataset.name = `${line} - ${fahrtId}`;\r\n\t\t\t\tpositiveBlock.dataset.value = (Math.ceil(heightPositive * 10) / 10) + '%';\r\n                positiveBlock.style.height = heightPositive + '%';\r\n\r\n                totalBlock.appendChild(positiveBlock);\r\n                el.append(totalBlock);\r\n            });\r\n        };\r\n\r\n        init();\r\n\r\n        function _getHeight( mostParts, act ) {\r\n            let maxValue = el.innerHeight() * .8;\r\n            return maxValue / (100 / (act / (mostParts / 100)));\r\n        }\r\n    };\r\n    jQuery('#rating').C3Graph({\r\n        data: graphData\r\n    });\r\n})\r\n;"]}